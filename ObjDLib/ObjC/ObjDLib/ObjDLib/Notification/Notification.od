package core.chain

class NotificationHandle<S, D>(name : string) {
    def post(self : NotificationHandle<_, void>, sender : S) {
        NotificationCenter.instance.post(name, sender, nil)
    }

    def post(sender : S, data : D) {
        NotificationCenter.instance.post(name, sender, data)
    }

    def observe(weak by : (S, D) -> void) : NotificationObserver = {
        NotificationCenter.instance.addObserver<S, D>(name, sender = nil) { sender, data ->
            by(sender, data)
        }
    }

    def observe(sender : S, weak by : D -> void) : NotificationObserver = {
        NotificationCenter.instance.addObserver<S, D>(name, sender) { _, data ->
            by(data)
        }
    }
}